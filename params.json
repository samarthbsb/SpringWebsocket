{"name":"Springwebsocket","tagline":"","body":"![Build Status](https://api.travis-ci.org/samarthbsb/SpringWebsocket.svg?branch=master)\r\n\r\n***\r\n\r\n```java\r\npackage com.smapp.config;\r\n\r\nimport org.springframework.context.annotation.Bean;\r\nimport org.springframework.context.annotation.ComponentScan;\r\nimport org.springframework.context.annotation.Configuration;\r\nimport org.springframework.context.annotation.Import;\r\nimport org.springframework.web.servlet.config.annotation.*;\r\nimport org.springframework.web.servlet.mvc.WebContentInterceptor;\r\nimport org.springframework.web.servlet.view.InternalResourceViewResolver;\r\n\r\n/**\r\n * Created by samarth on 04/03/15.\r\n */\r\n@Configuration\r\n@EnableWebMvc\r\n@ComponentScan(basePackages = \"com.smapp\")\r\n@Import({ WebSocketConfig.class })\r\npublic class WebConfig extends WebMvcConfigurerAdapter {\r\n\r\n\r\n    @Bean\r\n    public InternalResourceViewResolver getInternalResourceViewResolver() {\r\n        InternalResourceViewResolver resourceViewResolver = new InternalResourceViewResolver();\r\n        resourceViewResolver.setPrefix(\"/WEB-INF/views/\");\r\n        resourceViewResolver.setSuffix(\".jsp\");\r\n        return resourceViewResolver;\r\n    }\r\n\r\n    @Bean\r\n    public WebContentInterceptor webContentInterceptor() {\r\n        WebContentInterceptor interceptor = new WebContentInterceptor();\r\n        interceptor.setCacheSeconds(0);\r\n        interceptor.setUseExpiresHeader(true);\r\n        interceptor.setUseCacheControlHeader(true);\r\n        interceptor.setUseCacheControlNoStore(true);\r\n        return interceptor;\r\n    }\r\n\r\n    @Override public void configureDefaultServletHandling(DefaultServletHandlerConfigurer configurer) {\r\n        configurer.enable();\r\n    }\r\n\r\n    @Override public void addInterceptors(InterceptorRegistry registry) {\r\n        registry.addInterceptor(webContentInterceptor());\r\n        //        registry.addInterceptor(new PathMatchingInterceptor());\r\n    }\r\n\r\n    @Override public void addResourceHandlers(ResourceHandlerRegistry registry) {\r\n        registry.addResourceHandler(\"/libs/**\").addResourceLocations(\"/libs/\");\r\n        registry.addResourceHandler(\"/app/**\").addResourceLocations(\"/app/\");\r\n        registry.addResourceHandler(\"/assets/**\").addResourceLocations(\"/assets/\");\r\n\r\n    }\r\n}```\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}